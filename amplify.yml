version: 1
applications:
  - appRoot: .
    frontend:
      phases:
        preBuild:
          commands:
            - NVM_NODE_VER="$(cat .nvmrc 2>/dev/null || echo 20)"
            - nvm install "$NVM_NODE_VER"
            - nvm use "$NVM_NODE_VER"

            - corepack enable
            - |
              PKG_MGR_SPEC="$(node -e "try{console.log(require('./package.json').packageManager||'')}catch(e){process.exit(0)}")"
              if [ -n "$PKG_MGR_SPEC" ] && echo "$PKG_MGR_SPEC" | grep -q '^pnpm@'; then
                PNPM_SPEC="$PKG_MGR_SPEC"
              else
                PNPM_SPEC="pnpm@10.17.0"
              fi
              echo "Activating $PNPM_SPEC"
              corepack prepare "$PNPM_SPEC" --activate
            - echo "PNPM $(pnpm -v)"

            - export PNPM_STORE_PATH=.pnpm-store
            - pnpm config set store-dir "$PNPM_STORE_PATH"

            - LOCK_HASH_FILE=.amplify-pnpm-lock.hash
            - CUR_LOCK_HASH="$(md5sum pnpm-lock.yaml 2>/dev/null | awk '{print $1}' || echo 'no-lock')"
            - CACHED_LOCK_HASH="$(cat "$LOCK_HASH_FILE" 2>/dev/null || echo 'none')"

            - |
              if [ -d node_modules ] && [ -d "$PNPM_STORE_PATH" ] && [ "$CUR_LOCK_HASH" = "$CACHED_LOCK_HASH" ]; then
                echo "Lockfile unchanged and cache present. Skipping pnpm install."
                pnpm rebuild --recursive || true
              else
                echo "Installing deps (cache miss or lockfile changed)â€¦"
                pnpm install --frozen-lockfile --prefer-offline
              fi
            - echo "$CUR_LOCK_HASH" > "$LOCK_HASH_FILE"

        build:
          commands:
            - pnpm build

      artifacts:
        baseDirectory: .next
        files:
          - "**/*"

      cache:
        paths:
          - .pnpm-store/**/*
          - node_modules/**/*
          - .amplify-pnpm-lock.hash
